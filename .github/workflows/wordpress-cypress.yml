name: WordPress CI/CD Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  setup-environment:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Install and Configure MySQL
      - name: Install and Configure MySQL
        run: |
          echo "### Debug: Checking MySQL installation and service status ###"
          dpkg -l | grep mysql || echo "MySQL is not installed"

          # Stop MySQL service if running
          sudo service mysql stop || echo "MySQL service already stopped"

          # Ensure the socket directory exists
          echo "### Debug: Ensuring /var/run/mysqld directory exists ###"
          if [ ! -d /var/run/mysqld ]; then
            sudo mkdir -p /var/run/mysqld
            sudo chown mysql:mysql /var/run/mysqld
          fi

          # Start MySQL with skip-grant-tables for root access
          echo "### Debug: Starting MySQL with skip-grant-tables ###"
          sudo mysqld_safe --skip-grant-tables &
          sleep 10  # Wait for MySQL to initialize

          # Change root user plugin to mysql_native_password
          echo "### Debug: Resetting root user authentication ###"
          mysql --user=root <<EOF
          UPDATE mysql.user SET plugin = 'mysql_native_password' WHERE user = 'root';
          EOF

          # Stop the temporary MySQL instance
          echo "### Debug: Stopping temporary MySQL instance ###"
          sudo killall mysqld_safe
          sleep 5

          # Start MySQL normally
          echo "### Debug: Restarting MySQL service ###"
          sudo service mysql start
          sleep 10  # Wait for service to initialize

          # Now set the root password and flush privileges
          echo "### Debug: Setting root password and flushing privileges ###"
          mysql -uroot <<EOF
          ALTER USER 'root'@'localhost' IDENTIFIED BY 'root_password';
          FLUSH PRIVILEGES;
          EOF

          # Verify root user authentication
          echo "### Debug: Testing root user authentication ###"
          if ! mysql -uroot -proot_password -e "SELECT VERSION();"; then
            echo "Root authentication failed. Debugging..."
            sudo mysql -e "SELECT user, host, plugin FROM mysql.user;" || echo "Failed to retrieve user table"
            exit 1
          fi

          # Create WordPress database and configure runner user
          echo "### Debug: Creating WordPress database and runner user ###"
          mysql -uroot -proot_password <<EOF
          CREATE DATABASE wordpress;
          CREATE USER 'runner'@'localhost' IDENTIFIED BY 'runner_password';
          GRANT ALL PRIVILEGES ON wordpress.* TO 'runner'@'localhost';
          FLUSH PRIVILEGES;
          EOF

          echo "### Debug: MySQL setup complete ###"




      # Step 3: Verify MySQL Service
      - name: Verify MySQL Setup
        run: |
          echo "### Debug: Testing MySQL setup ###"
          sudo mysql -uroot -proot_password -e "SHOW DATABASES;" || echo "Failed to show databases as root user"
          sudo mysql -urunner -prunner_password -e "SHOW DATABASES;" || echo "Failed to show databases as runner user"

      # Step 4: Install PHP and Dependencies
      - name: Install PHP and dependencies
        run: |
          echo "### Debug: Installing PHP and dependencies ###"
          sudo apt-get install -y php php-mysql unzip curl || echo "Failed to install PHP and dependencies"

      # Step 5: Download and Configure WordPress
      - name: Set up WordPress
        run: |
          echo "### Debug: Setting up WordPress ###"

          # Download WordPress
          if ! curl -O https://wordpress.org/latest.tar.gz; then
            echo "Failed to download WordPress" && exit 1
          fi

          # Extract WordPress
          if ! tar -xzf latest.tar.gz; then
            echo "Failed to extract WordPress" && exit 1
          fi

          # Move WordPress files
          if ! mv wordpress/* .; then
            echo "Failed to move WordPress files" && exit 1
          fi

          # Copy wp-config-sample.php to wp-config.php
          if ! cp wp-config-sample.php wp-config.php; then
            echo "Failed to copy wp-config-sample.php to wp-config.php" && exit 1
          fi

          # Set database name in wp-config.php
          if ! sed -i "s/database_name_here/wordpress/" wp-config.php; then
            echo "Failed to set database name in wp-config.php" && exit 1
          fi

          # Set username in wp-config.php
          if ! sed -i "s/username_here/runner/" wp-config.php; then
            echo "Failed to set username in wp-config.php" && exit 1
          fi

          # Set password in wp-config.php
          if ! sed -i "s/password_here/runner_password/" wp-config.php; then
            echo "Failed to set password in wp-config.php" && exit 1
          fi

          # Start PHP built-in server
          if ! php -S 127.0.0.1:8080 &; then
            echo "Failed to start PHP server" && exit 1
          fi

      # Step 6: Wait for WordPress to be Ready
      - name: Wait for WordPress Setup
        run: |
          echo "### Debug: Waiting for WordPress to be ready ###"
          for i in {1..10}; do
            if curl -s http://127.0.0.1:8080/wp-admin/install.php; then
              echo "WordPress is ready!"
              break
            else
              echo "Retrying WordPress setup..."
              sleep 5
            fi
          done
